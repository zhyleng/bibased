<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc  
     http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd  
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd  
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:config/jdbc.properties" />
	</bean>


	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${user}" />
		<property name="password" value="${password}" />
		<property name="initialSize" value="${initialSize}" />		<!-- 初始化连接数量 -->
		<property name="maxActive" value="${maxActive}" />			<!-- 最大连接数量 -->
		<property name="maxIdle" value="${maxIdle}" />				<!-- 最大空闲连接数量 -->
		<property name="minIdle" value="${minIdle}" />				<!-- 最小空闲连接数量 -->
		<property name="defaultAutoCommit" value="false" />
	</bean>

	<!-- 开启注解配置 创建四个annotation的处理器对象 -->
	<context:annotation-config />
	<!-- 扫描service层 实例化每个注解了的Bean -->
	<context:component-scan base-package="com.hichujian.service.impl" />

	<!-- Spring mvc -->
	<mvc:annotation-driven />
	<context:component-scan base-package="com.hichujian.web.controller" />
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
       <property name="prefix" value="/WEB-INF/jsp/" />                 
       <property name="suffix" value=".jsp" />                
	</bean>  
	<!-- 拦截器（放攻击（XSS，CSRF）、重复提交） <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"> 
		<property name="interceptors"> <list> <bean class="com.hichujian.web.interceptor.CJInterceptor" 
		/> </list> </property> </bean> -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/post/*" />
			<mvc:mapping path="/activity/*" />
			<mvc:mapping path="/push/*" />
			<mvc:mapping path="/comment/*" />
			<mvc:mapping path="/message/*" />
			<mvc:mapping path="/user/*" />
			<mvc:mapping path="/config/*" />
			<mvc:mapping path="/version/*" />
			<mvc:mapping path="/share/*" />
			<bean class="com.hichujian.web.interceptor.AuthorizationInterceptor" />

			<!-- <mvc:mapping path="/user/friendinfo" /> <mvc:mapping path="/user/changepwd" 
				/> <mvc:mapping path="/user/info" /> <mvc:mapping path="/user/loginout" /> 
				<mvc:mapping path="/user/updateloc" /> <mvc:mapping path="/user/pull_black" 
				/> <mvc:mapping path="/user/cancel_pull_black" /> <mvc:mapping path="/user/feedback" 
				/> -->
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/post/*" />
			<mvc:mapping path="/activity/*" />
			<mvc:mapping path="/push/*" />
			<mvc:mapping path="/comment/*" />
			<mvc:mapping path="/message/*" />
			<mvc:mapping path="/user/*" />
			<mvc:mapping path="/config/*" />
			<bean class="com.hichujian.web.interceptor.SignatureInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	<!-- 完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"> 
		<property name="messageConverters"> <list> <bean class="org.springframework.http.converter.StringHttpMessageConverter"> 
		<constructor-arg value="UTF-8" /> <property name="writeAcceptCharset" value="false" 
		/> </bean> <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"></bean> 
		<bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter"></bean> 
		<bean class="org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter"></bean> 
		</list> </property> </bean> -->
	<!-- Spring mvc -->

	<!-- 事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 开启事务注解驱动 有这两个配置 即可以在service中利用Transaction注解配置事务了 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- tx/aop方式的事务管理 -->
	<!-- <tx:advice id="userTxAdvice" transaction-manager="transactionManager"> 
		<tx:attributes> <tx:method name="test*" propagation="REQUIRED" read-only="false" 
		rollback-for="java.lang.Exception"/> <tx:method name="insert*" propagation="REQUIRED" 
		read-only="false" rollback-for="java.lang.RuntimeException" /> <tx:method 
		name="update*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" 
		/> <tx:method name="tes*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" 
		/> <tx:method name="find*" propagation="SUPPORTS"/> <tx:method name="get*" 
		propagation="SUPPORTS"/> <tx:method name="select*" propagation="SUPPORTS"/> 
		</tx:attributes> </tx:advice> <aop:config> <aop:pointcut id="pc" expression="execution(public 
		* com.hichujian.service.impl.*.*(..))" /> <aop:advisor pointcut-ref="pc" 
		advice-ref="userTxAdvice" /> </aop:config> -->

	<!-- 创建SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:config/mybatis-config.xml" />
		<property name="mapperLocations" value="classpath:com.hichujian.mapper.*.xml" />
	</bean>

	<!-- 自动扫描映射器 <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> 
		<property name="basePackage" value="classpath:com.hichujian.mapper" /> </bean> -->

	<bean id="userDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="mapperInterface" value="com.hichujian.dao.UserDAO" />
	</bean>

	<bean id="activityDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="mapperInterface" value="com.hichujian.dao.ActivityDAO" />
	</bean>

	<bean id="uBlackDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="mapperInterface" value="com.hichujian.dao.UBlackDAO" />
	</bean>

	<bean id="aCommentDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="mapperInterface" value="com.hichujian.dao.ACommentDAO" />
	</bean>

	<bean id="messageDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="mapperInterface" value="com.hichujian.dao.MessageDAO" />
	</bean>

	<!-- bean id="pushDAO" class="org.mybatis.spring.mapper.MapperFactoryBean" 
		scope="prototype" -->
	<bean id="pushSettingDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="mapperInterface" value="com.hichujian.dao.PushSettingDAO" />
	</bean>

	<bean id="aReportDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="mapperInterface" value="com.hichujian.dao.AReportDAO" />
	</bean>

	<bean id="signUpDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="mapperInterface" value="com.hichujian.dao.SignUpDAO" />
	</bean>

	<bean id="feedbackDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="mapperInterface" value="com.hichujian.dao.FeedbackDAO" />
	</bean>

	<bean id="creditsDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="mapperInterface" value="com.hichujian.dao.CreditsDAO" />
	</bean>

	<bean id="aPraiseDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="mapperInterface" value="com.hichujian.dao.APraiseDAO" />
	</bean>
<!-- 
	<bean id="postDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="mapperInterface" value="com.hichujian.dao.PostDAO" />
	</bean>

	<bean id="pCommentDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="mapperInterface" value="com.hichujian.dao.PCommentDAO" />
	</bean>

	<bean id="pPraiseDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="mapperInterface" value="com.hichujian.dao.PPraiseDAO" />
	</bean> -->

	<bean id="configDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="mapperInterface" value="com.hichujian.dao.ConfigDAO" />
	</bean>

	<bean id="clientVersionInfoDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="mapperInterface" value="com.hichujian.dao.ClientVersionInfoDAO" />
	</bean>

	<bean id="interestDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="mapperInterface" value="com.hichujian.dao.InterestDAO" />
	</bean>

	<bean id="attentionDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="mapperInterface" value="com.hichujian.dao.AttentionDAO" />
	</bean>

	<bean id="uReportDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="mapperInterface" value="com.hichujian.dao.UReportDAO" />
	</bean>
</beans>